% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AppenderAsync.R
\name{AppenderAsync}
\alias{AppenderAsync}
\title{Log to Async via futures}
\value{
The \verb{$new()} method returns an \link[R6:R6Class]{R6::R6} that inherits from
\link[lgr:Appender]{lgr::Appender} and can be uses as an appender by a \link[lgr:Logger]{lgr::Logger}.
}
\description{
This Appender can be used as wrapper around another Appender to make it
async (i.e. not block until the log message is written to the destination
but rather return imediatly). This makes most sense for "slow" destinations
like Databases or ElasticSearch.

\strong{NOTE}: \strong{Experimental}; not yet fully documented and and details are
subject to change
}
\examples{
\dontrun{
  app <- AppenderAsync$new(AppenderFile$new(file = tempfile()))
  lg <- get_logger("test/async")$add_appender(app)

  # you also have to configure the future::plan to actually enable async
  # logging
  future::plan("multisession")

  lg$info("This will be written to a file asynchronously!")
}

}
\seealso{
Other Appenders: 
\code{\link{AppenderDbi}},
\code{\link{AppenderDt}},
\code{\link{AppenderElasticSearch}},
\code{\link{AppenderGmail}},
\code{\link{AppenderPushbullet}},
\code{\link{AppenderSendmail}},
\code{\link{AppenderSyslog}}
}
\concept{Appenders}
\section{Super classes}{
\code{\link[lgr:Filterable]{lgr::Filterable}} -> \code{\link[lgr:Appender]{lgr::Appender}} -> \code{AppenderAsync}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{AppenderAsync$new()}}
\item \href{#method-set_appender}{\code{AppenderAsync$set_appender()}}
\item \href{#method-set_threshold}{\code{AppenderAsync$set_threshold()}}
\item \href{#method-set_layout}{\code{AppenderAsync$set_layout()}}
\item \href{#method-append}{\code{AppenderAsync$append()}}
\item \href{#method-format}{\code{AppenderAsync$format()}}
\item \href{#method-clone}{\code{AppenderAsync$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="lgr" data-topic="Filterable" data-id="add_filter">}\href{../../lgr/html/Filterable.html#method-add_filter}{\code{lgr::Filterable$add_filter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lgr" data-topic="Filterable" data-id="filter">}\href{../../lgr/html/Filterable.html#method-filter}{\code{lgr::Filterable$filter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lgr" data-topic="Filterable" data-id="remove_filter">}\href{../../lgr/html/Filterable.html#method-remove_filter}{\code{lgr::Filterable$remove_filter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lgr" data-topic="Filterable" data-id="set_filters">}\href{../../lgr/html/Filterable.html#method-set_filters}{\code{lgr::Filterable$set_filters()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$new(appender)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{appender}}{a single \code{Appender} that will be called asynchronously}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_appender"></a>}}
\if{latex}{\out{\hypertarget{method-set_appender}{}}}
\subsection{Method \code{set_appender()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$set_appender(appender)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_threshold"></a>}}
\if{latex}{\out{\hypertarget{method-set_threshold}{}}}
\subsection{Method \code{set_threshold()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$set_threshold(level)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_layout"></a>}}
\if{latex}{\out{\hypertarget{method-set_layout}{}}}
\subsection{Method \code{set_layout()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$set_layout(layout)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-append"></a>}}
\if{latex}{\out{\hypertarget{method-append}{}}}
\subsection{Method \code{append()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$append(event)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$format(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AppenderAsync$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
